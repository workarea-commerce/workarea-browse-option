module Workarea
  decorate BulkIndexProducts, with: :browse_option do
    class_methods do
      def perform(ids = Catalog::Product.pluck(:id))
        ids = ids.map { |id| BrowseOptionIds.extract(id) }.uniq
        super(ids)
      end

      def perform_by_models(products)
        return if products.blank?
        delete_existing_documents(products)
        super
      end
      alias_method :perform_by_model, :perform_by_models

      def delete_existing_documents(products)
        I18n.for_each_locale do
          ids = find_ids_to_delete(products)
          Search::Storefront.bulk(ids.map { |id| { id: id, bulk_action: :delete } })
        end
      end

      def find_ids_to_delete(products)
        ids = Array.wrap(products).map do |product|
          id = Search::Storefront::Product.new(product).keywords[:catalog_id]
          id.gsub(Workarea.config.search_index_id_escape_regex) { |match| "\\#{match}" }
        end

        query = { query: { terms: { 'keywords.catalog_id': ids } } }
        Search::Storefront.search(query)['hits']['hits'].pluck('_id')
      end
    end
  end
end
